// Documentation: https://github.com/coreos/coreos-ci/blob/main/README-upstream-ci.md

buildPod {
    checkout scm

    stage("Build") {
        shwrap("make && make install DESTDIR=install")
        stash name: 'build', includes: 'install/**'
    }
}

cosaPod(buildroot: true, runAsUser: 0) {
    checkout scm

    unstash name: 'build'

    // Delete the OS copy of coreos-installer so we don't test it by mistake
    shwrap("rm /usr/bin/coreos-installer")
    // Make sure cosa is using the binary we just built.
    shwrap("rsync -rlv install/usr/ /usr/")

    // XXX: temporarily build FCOS manually until virtiofs can work with uid 0
    // https://gitlab.com/virtio-fs/virtiofsd/-/merge_requests/197
    //cosaBuild(skipKola: true, overlays: ["install"])
    shwrap("""
        if [ "\$(id -u)" = 0 ]; then
            exec runuser -u builder -- bash "\$0" "\$@"
        fi
        mkdir -p /srv/coreos && cd /srv/coreos
        cosa init https://github.com/coreos/fedora-coreos-config
        rsync -av ${env.WORKSPACE}/install/ /srv/coreos/overrides/rootfs
        cosa fetch --strict
        cosa build --strict --force
    """)

    // Skipping kdump.crash due to CI failure in coreos-installer repo
    // https://github.com/coreos/fedora-coreos-tracker/issues/1075
    kola(extraArgs: "--denylist-test ext.config.kdump.crash")

    stage("Build metal+live") {
        shwrap("cd /srv/coreos && runuser -u builder -- cosa buildextend-metal")
        shwrap("cd /srv/coreos && runuser -u builder -- cosa buildextend-metal4k")
        shwrap("cd /srv/coreos && runuser -u builder -- cosa buildextend-live --fast")
        // Test metal with an uncompressed image and metal4k with a
        // compressed one
        shwrap("cd /srv/coreos && runuser -u builder -- cosa compress --fast --artifact=metal4k")
    }
    stage("Test ISO") {
        // No need to run the iso-live-login/iso-as-disk scenarios
        kolaTestIso(
            extraArgs: "--denylist-test iso-as-disk.* --denylist-test iso-live-login.*"
        )
    }
    stage("Image tests") {
        shwrap("COREOS_INSTALLER_TEST_INSTALLED_BINARY=1 tests/images.sh /srv/coreos/builds/latest/x86_64")
    }
}
